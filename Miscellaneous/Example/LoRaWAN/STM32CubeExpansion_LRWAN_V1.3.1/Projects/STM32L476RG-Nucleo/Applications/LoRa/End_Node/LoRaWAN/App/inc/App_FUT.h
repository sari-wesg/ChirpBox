//**************************************************************************************************
//**** Includes ************************************************************************************
#include "hw.h"

//**************************************************************************************************
//***** Local Defines and Consts *******************************************************************


//**************************************************************************************************
//***** Local Typedefs and Class Declarations ******************************************************

//**************************************************************************************************
//***** Forward Declarations ***********************************************************************

//**************************************************************************************************
//***** Local (Static) Variables *******************************************************************

//**************************************************************************************************
//***** Global Variables ***************************************************************************

//**************************************************************************************************
//***** Local Functions ****************************************************************************

//**************************************************************************************************
//***** Global Typedefs and Class Declarations *****************************************************
typedef enum
{
    FUT_MAX_SEND = 0,
    FUT_DATA_SEND_INTERVAL,
    FUT_JOIN_RATE,
    FUT_UPLINK_RATE,
    FUT_UPLINK_POWER,
} FUT_param;

 /* LPTIM1 */
#define LP_TIMER hlptim1.Instance
#define LP_TIMER_IRQ LPTIM1_IRQn
#define LP_TIMER_ISR_NAME LPTIM1_IRQHandler

#define LP_TIMER_CMP_REG (LP_TIMER->CMP)  /* compare interrupt count */
#define LP_TIMER_CNT_REG (LP_TIMER->CNT)  /* lptim1 now count */

//**************************************************************************************************
//***** Global Functions ***************************************************************************
void slow_tick_update();
void slow_tick_end();
